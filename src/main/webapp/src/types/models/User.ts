/* tslint:disable */
/* eslint-disable */
/**
 * TravelSync API
 * ## TravelSync API Documentation This API provides endpoints for managing travel itineraries, including creating, updating, and retrieving travel plans. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: pniecke@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * Unique identifier for the user
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * Password of the user
     * @type {string}
     * @memberof User
     */
    password?: string;
    /**
     * Username of the user
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * First name of the user
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * Last name of the user
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * Email address of the user
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * Mobile phone number of the user
     * @type {string}
     * @memberof User
     */
    mobile?: string;
    /**
     * Locale of the user
     * @type {string}
     * @memberof User
     */
    locale?: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'username': json['username'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'mobile': !exists(json, 'mobile') ? undefined : json['mobile'],
        'locale': !exists(json, 'locale') ? undefined : json['locale'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'password': value.password,
        'username': value.username,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'email': value.email,
        'mobile': value.mobile,
        'locale': value.locale,
    };
}

