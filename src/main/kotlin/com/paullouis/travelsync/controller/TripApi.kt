/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.paullouis.travelsync.controller

import com.paullouis.travelsync.model.generated.Trip
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired


import kotlin.collections.List
import kotlin.collections.Map

@RequestMapping("\${api.base-path:/api}")
interface TripApi {

    @Operation(
        summary = "Create a new trip",
        operationId = "createTrip",
        description = """""",
        responses = [
            ApiResponse(responseCode = "201", description = "Trip created successfully", content = [Content(schema = Schema(implementation = Trip::class))]),
            ApiResponse(responseCode = "400", description = "Bad Request - Invalid trip data"),
            ApiResponse(responseCode = "401", description = "Unauthorized - Authentication required")
        ],
        security = [ SecurityRequirement(name = "OidcAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/trips"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun createTrip(@Parameter(description = "", required = true)  @RequestBody trip: kotlin.collections.List<Trip>): ResponseEntity<List<Trip>> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }

    @Operation(
        summary = "Get Trips for Logged-in User",
        operationId = "getTripsByLoggedInUser",
        description = """Retrieves a list of trips associated with the currently authenticated user.""",
        responses = [
            ApiResponse(responseCode = "200", description = "List of trips for the logged-in user", content = [Content(schema = Schema(implementation = Trip::class))]),
            ApiResponse(responseCode = "401", description = "Unauthorized - Authentication required")
        ],
        security = [ SecurityRequirement(name = "OidcAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/trips/my-trips"],
            produces = ["application/json"]
    )
    fun getTripsByLoggedInUser(): ResponseEntity<List<Trip>> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }

    @Operation(
        summary = "Update an existing trip",
        operationId = "updateTrip",
        description = """""",
        responses = [
            ApiResponse(responseCode = "200", description = "Trip updated successfully", content = [Content(schema = Schema(implementation = Trip::class))]),
            ApiResponse(responseCode = "400", description = "Bad Request - Invalid trip data"),
            ApiResponse(responseCode = "401", description = "Unauthorized - Authentication required")
        ],
        security = [ SecurityRequirement(name = "OidcAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.PUT],
            value = ["/trips/{id}"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun updateTrip(@Parameter(description = "Unique identifier of the trip to update", required = true) @PathVariable("id") id: java.util.UUID,@Parameter(description = "", required = true)  @RequestBody trip: Trip): ResponseEntity<Trip> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
